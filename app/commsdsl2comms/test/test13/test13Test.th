#include "cxxtest/TestSuite.h"

#include "test13/Message.h"
#include "test13/input/AllMessages.h"

class TestSuite : public CxxTest::TestSuite
{
public:
    void test1();
    void test2();
    void test3();

    using Interface =
        test13::Message<
            comms::option::app::IdInfoInterface,
            comms::option::app::ReadIterator<const std::uint8_t*>,
            comms::option::app::WriteIterator<std::uint8_t*>,
            comms::option::app::LengthInfoInterface,
            comms::option::app::ValidCheckInterface,
            comms::option::app::NameInterface,
            comms::option::app::RefreshInterface
        >;

    TEST13_ALIASES_FOR_ALL_MESSAGES_DEFAULT_OPTIONS(,,Interface)
};

void TestSuite::test1()
{
    Msg1 msg;
    TS_ASSERT(msg.valid());
}

void TestSuite::test2()
{
    Msg2 msg;
    TS_ASSERT(msg.valid());
    TS_ASSERT(msg.field_opt1().doesExist());
    TS_ASSERT(msg.field_opt2().doesExist());
    TS_ASSERT(msg.field_opt3().doesExist());
    TS_ASSERT(msg.field_opt4().doesExist());    
    TS_ASSERT(msg.field_opt1().field().isMissing());
    TS_ASSERT(msg.field_opt2().field().isMissing());
    TS_ASSERT(msg.field_opt3().field().isMissing());
    TS_ASSERT(msg.field_opt4().field().isMissing());
    msg.field_flags().field_bits().setBitValue_Opt1Exists(true);
    msg.field_flags().field_bits().setBitValue_Opt2Missing(false);
    msg.field_flags().field_someValue1().value() = 1U;
    msg.field_flags().field_someValue2().value() = 2U;
    TS_ASSERT(msg.doRefresh());
    TS_ASSERT(msg.field_opt1().field().doesExist());
    TS_ASSERT(msg.field_opt2().field().doesExist());
    TS_ASSERT(msg.field_opt3().field().doesExist());
    TS_ASSERT(msg.field_opt4().field().doesExist());

    msg.transportField_version().value() = 0;
    TS_ASSERT(msg.doRefresh());
    TS_ASSERT(msg.field_opt1().isMissing());
    TS_ASSERT(msg.field_opt2().isMissing());
    TS_ASSERT(msg.field_opt3().isMissing());
    TS_ASSERT(msg.field_opt4().isMissing());    
}

void TestSuite::test3()
{
    Msg3 msg;
}