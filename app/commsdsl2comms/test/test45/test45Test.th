#include "cxxtest/TestSuite.h"

#include "comms/iterator.h"
#include "test45/Message.h"
#include "test45/message/Msg.h"
#include "test45/frame/Frame.h"

class TestSuite : public CxxTest::TestSuite
{
public:
    void test1();

    using Interface = test45::Message<>;
    using Msg = test45::message::Msg<Interface>;
    using Frame = test45::frame::Frame<Interface>;
};

void TestSuite::test1()
{
    Msg outMsg;
    auto& propsList = outMsg.field_f1().value();
    propsList.resize(3);
    propsList[0].initField_p0().field_val().value() = 0xaa;
    propsList[1].initField_p1().field_val().value() = 0x0123;
    propsList[2].initField_p2().field_val().value() = "hello";

    std::vector<std::uint8_t> buf;
    Frame frame;
    auto writeIter = std::back_inserter(buf);

    auto es = frame.write(outMsg, writeIter, buf.max_size());
    TS_ASSERT_EQUALS(es, comms::ErrorStatus::Success);
    TS_ASSERT(!buf.empty());

    Msg inMsg;
    auto readIter = &buf[0];
    es = frame.read(inMsg, readIter, buf.size());
    TS_ASSERT_EQUALS(inMsg.field_f1(), outMsg.field_f1());
}